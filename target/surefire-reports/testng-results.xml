<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="3" ignored="0" total="6" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-06-22T20:22:19 IST" name="Regression Test Suite" finished-at="2025-06-22T20:23:35 IST" duration-ms="75889">
    <groups>
      <group name="sanity">
        <method signature="LoginTest.loginJSONTest(com.ui.pojo.User)[pri:1, instance:com.ui.tests.LoginTest@6c0d7c83]" name="loginJSONTest" class="com.ui.tests.LoginTest"/>
        <method signature="LoginTest.loginCSV_Test(com.ui.pojo.User)[pri:2, instance:com.ui.tests.LoginTest@6c0d7c83]" name="loginCSV_Test" class="com.ui.tests.LoginTest"/>
        <method signature="LoginTest.loginExcelTest(com.ui.pojo.User)[pri:3, instance:com.ui.tests.LoginTest@6c0d7c83]" name="loginExcelTest" class="com.ui.tests.LoginTest"/>
      </group> <!-- sanity -->
      <group name="e2e">
        <method signature="LoginTest.loginJSONTest(com.ui.pojo.User)[pri:1, instance:com.ui.tests.LoginTest@6c0d7c83]" name="loginJSONTest" class="com.ui.tests.LoginTest"/>
        <method signature="LoginTest.loginCSV_Test(com.ui.pojo.User)[pri:2, instance:com.ui.tests.LoginTest@6c0d7c83]" name="loginCSV_Test" class="com.ui.tests.LoginTest"/>
        <method signature="LoginTest.loginExcelTest(com.ui.pojo.User)[pri:3, instance:com.ui.tests.LoginTest@6c0d7c83]" name="loginExcelTest" class="com.ui.tests.LoginTest"/>
      </group> <!-- e2e -->
    </groups>
    <test started-at="2025-06-22T20:22:19 IST" name="LoginTest" finished-at="2025-06-22T20:23:35 IST" duration-ms="75889">
      <class name="com.ui.tests.LoginTest">
        <test-method is-config="true" signature="setUp(java.lang.String,boolean,boolean,org.testng.ITestResult)[pri:0, instance:com.ui.tests.LoginTest@6c0d7c83]" started-at="2025-06-22T20:22:19 IST" name="setUp" finished-at="2025-06-22T20:22:26 IST" duration-ms="7194" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=LoginTest.loginJSONTest(com.ui.pojo.User)[pri:1, instance:com.ui.tests.LoginTest@6c0d7c83] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loginJSONTest(com.ui.pojo.User)[pri:1, instance:com.ui.tests.LoginTest@6c0d7c83]" started-at="2025-06-22T20:22:26 IST" name="loginJSONTest" description="validate login functionality" data-provider="loginJSON_DataProvider" finished-at="2025-06-22T20:22:29 IST" duration-ms="2432" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[User [emailAddress=yotaya5807@jeanssi.com, Password=Password]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginJSONTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.ui.tests.LoginTest@6c0d7c83]" started-at="2025-06-22T20:22:29 IST" name="tearDown" finished-at="2025-06-22T20:22:30 IST" duration-ms="1265" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,boolean,boolean,org.testng.ITestResult)[pri:0, instance:com.ui.tests.LoginTest@6c0d7c83]" started-at="2025-06-22T20:22:30 IST" name="setUp" finished-at="2025-06-22T20:22:37 IST" duration-ms="6658" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=LoginTest.loginCSV_Test(com.ui.pojo.User)[pri:2, instance:com.ui.tests.LoginTest@6c0d7c83] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loginCSV_Test(com.ui.pojo.User)[pri:2, instance:com.ui.tests.LoginTest@6c0d7c83]" started-at="2025-06-22T20:22:37 IST" name="loginCSV_Test" description="validate login functionality" data-provider="loginCSV_DataProvider" finished-at="2025-06-22T20:22:41 IST" duration-ms="4574" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[User [emailAddress=yotaya5807@jeanssi.com, Password=Password]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginCSV_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.ui.tests.LoginTest@6c0d7c83]" started-at="2025-06-22T20:22:41 IST" name="tearDown" finished-at="2025-06-22T20:22:43 IST" duration-ms="1291" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,boolean,boolean,org.testng.ITestResult)[pri:0, instance:com.ui.tests.LoginTest@6c0d7c83]" started-at="2025-06-22T20:22:43 IST" name="setUp" finished-at="2025-06-22T20:22:59 IST" duration-ms="15395" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=LoginTest.loginExcelTest(com.ui.pojo.User)[pri:3, instance:com.ui.tests.LoginTest@6c0d7c83] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="loginExcelTest(com.ui.pojo.User)[pri:3, instance:com.ui.tests.LoginTest@6c0d7c83]" started-at="2025-06-22T20:22:59 IST" name="loginExcelTest" description="validate login functionality" data-provider="loginExelDataProvider" finished-at="2025-06-22T20:23:01 IST" duration-ms="2183" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[User [emailAddress=yotaya5807@jeanssi.com, Password=Password]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Amolachari] but found [Amol achari]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Amolachari] but found [Amol achari]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at com.ui.tests.LoginTest.loginExcelTest(LoginTest.java:51)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginExcelTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.ui.tests.LoginTest@6c0d7c83]" started-at="2025-06-22T20:23:01 IST" name="tearDown" finished-at="2025-06-22T20:23:02 IST" duration-ms="1294" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,boolean,boolean,org.testng.ITestResult)[pri:0, instance:com.ui.tests.LoginTest@6c0d7c83]" started-at="2025-06-22T20:23:02 IST" name="setUp" finished-at="2025-06-22T20:23:09 IST" duration-ms="6894" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=LoginTest.loginExcelTest(com.ui.pojo.User)[pri:3, instance:com.ui.tests.LoginTest@6c0d7c83] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="loginExcelTest(com.ui.pojo.User)[pri:3, instance:com.ui.tests.LoginTest@6c0d7c83]" started-at="2025-06-22T20:23:09 IST" name="loginExcelTest" description="validate login functionality" data-provider="loginExelDataProvider" finished-at="2025-06-22T20:23:12 IST" duration-ms="2540" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[User [emailAddress=yotaya5807@jeanssi.com, Password=Password]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Amolachari] but found [Amol achari]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Amolachari] but found [Amol achari]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at com.ui.tests.LoginTest.loginExcelTest(LoginTest.java:51)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginExcelTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.ui.tests.LoginTest@6c0d7c83]" started-at="2025-06-22T20:23:12 IST" name="tearDown" finished-at="2025-06-22T20:23:13 IST" duration-ms="1258" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,boolean,boolean,org.testng.ITestResult)[pri:0, instance:com.ui.tests.LoginTest@6c0d7c83]" started-at="2025-06-22T20:23:13 IST" name="setUp" finished-at="2025-06-22T20:23:19 IST" duration-ms="6162" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=LoginTest.loginExcelTest(com.ui.pojo.User)[pri:3, instance:com.ui.tests.LoginTest@6c0d7c83] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="loginExcelTest(com.ui.pojo.User)[pri:3, instance:com.ui.tests.LoginTest@6c0d7c83]" started-at="2025-06-22T20:23:19 IST" name="loginExcelTest" description="validate login functionality" data-provider="loginExelDataProvider" finished-at="2025-06-22T20:23:22 IST" duration-ms="3451" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[User [emailAddress=yotaya5807@jeanssi.com, Password=Password]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Amolachari] but found [Amol achari]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Amolachari] but found [Amol achari]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at com.ui.tests.LoginTest.loginExcelTest(LoginTest.java:51)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginExcelTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.ui.tests.LoginTest@6c0d7c83]" started-at="2025-06-22T20:23:22 IST" name="tearDown" finished-at="2025-06-22T20:23:24 IST" duration-ms="1253" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,boolean,boolean,org.testng.ITestResult)[pri:0, instance:com.ui.tests.LoginTest@6c0d7c83]" started-at="2025-06-22T20:23:24 IST" name="setUp" finished-at="2025-06-22T20:23:31 IST" duration-ms="7581" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=LoginTest.loginExcelTest(com.ui.pojo.User)[pri:3, instance:com.ui.tests.LoginTest@6c0d7c83] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loginExcelTest(com.ui.pojo.User)[pri:3, instance:com.ui.tests.LoginTest@6c0d7c83]" started-at="2025-06-22T20:23:31 IST" name="loginExcelTest" description="validate login functionality" data-provider="loginExelDataProvider" finished-at="2025-06-22T20:23:33 IST" duration-ms="2028" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[User [emailAddress=yotaya5807@jeanssi.com, Password=Password]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Amolachari] but found [Amol achari]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Amolachari] but found [Amol achari]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at com.ui.tests.LoginTest.loginExcelTest(LoginTest.java:51)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginExcelTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.ui.tests.LoginTest@6c0d7c83]" started-at="2025-06-22T20:23:34 IST" name="tearDown" finished-at="2025-06-22T20:23:35 IST" duration-ms="1233" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.ui.tests.LoginTest -->
    </test> <!-- LoginTest -->
  </suite> <!-- Regression Test Suite -->
</testng-results>
